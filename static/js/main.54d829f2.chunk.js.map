{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.jsx","index.js"],"names":["Section","props","title","children","FeedbackOptions","options","onLeaveFeedback","optionsArray","Object","keys","map","option","type","className","value","onClick","target","Statistics","propsArray","entries","key","Notification","message","App","state","good","neutral","bad","addFeedback","val","setState","prevState","this","countTotalFeedback","Math","round","total","positive","countPositiveFeedbackPercentage","Component","defaultProps","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"qQAEe,SAASA,EAAQC,GAAQ,IAC5BC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OAAO,oCACC,6BAAKD,IACJC,K,WCJE,SAASC,EAAgBH,GAAQ,IACpCI,EAA4BJ,EAA5BI,QAASC,EAAmBL,EAAnBK,gBACXC,EAAY,YAAOC,OAAOC,KAAKJ,IACrC,OAAO,mCACFE,EAAaG,KAAI,SAAAC,GAAM,OACpB,wBAEIC,KAAK,SACLC,UAAU,SACVC,MAAOH,EACPI,QAAS,gBAAGC,EAAH,EAAGA,OAAH,OACLV,EAAgBU,EAAOF,QAN/B,SAQKH,GAPIA,Q,YCNN,SAASM,EAAWhB,GAC/B,IAAMiB,EAAU,YAAOV,OAAOW,QAAQlB,IACtC,OAAO,qCACH,4CACCiB,EAAWR,KAAI,mCAAEU,EAAF,KAAON,EAAP,YACZ,8BACI,iCAAOM,EAAP,OACA,+BAAON,MAFHM,SCLL,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OAAO,4BAAIA,I,ICGTC,E,4MAWFC,MAAQ,CACNC,KAAM,EAAKxB,MAAMwB,KACjBC,QAAS,EAAKzB,MAAMyB,QACpBC,IAAK,EAAK1B,MAAM0B,K,EAGlBC,YAAc,SAACC,GACX,EAAKC,UAAS,SAACC,GACX,OAAO,eACFF,EAAME,EAAUF,GAAO,O,mEAKd,IAAD,EACcG,KAAKR,MACpC,OAFiB,EACTC,KADS,EACHC,QADG,EACMC,M,wDAKQ,IACvBF,EAASO,KAAKR,MAAdC,KACV,OAAqC,IAA9BO,KAAKC,qBAA6B,EACvCC,KAAKC,MAAMV,EAAOO,KAAKC,qBAAuB,O,+BAGxC,IAAD,EAC0BD,KAAKR,MAA5BC,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IACzB,OACI,eAAC3B,EAAD,CAASE,MAAM,wBAAf,UACE,cAACE,EAAD,CAAiBC,QAAS2B,KAAKR,MAAOlB,gBAAiB0B,KAAKJ,cAC7B,IAA9BI,KAAKC,qBACN,cAACZ,EAAD,CAAcC,QAAQ,sBACtB,cAACL,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLS,MAAOJ,KAAKC,qBACZI,SAAQ,UAAKL,KAAKM,kCAAV,c,GAjDJC,aAAZhB,EACKiB,aAAe,CAClBf,KAAM,EACNC,QAAS,EACTC,IAAK,GAoDEJ,QCzDTkB,EAAOC,SAASC,cAAc,SAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.54d829f2.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Section(props) {\n    const { title, children } = props;\n    return <section>\n            <h1>{title}</h1>\n            {children}\n        </section>\n}","import React from 'react';\n\nexport default function FeedbackOptions(props) {\n    const { options, onLeaveFeedback} = props;\n    const optionsArray = [...Object.keys(options)];\n    return <>\n        {optionsArray.map(option =>\n            <button\n                key={option}\n                type='button'\n                className=\"button\"\n                value={option}\n                onClick={({ target }) =>\n                    onLeaveFeedback(target.value)\n                }>\n                {option}\n            </button>)}\n        </>\n}","import React from 'react';\n\nexport default function Statistics(props) {\n    const propsArray = [...Object.entries(props)];\n    return <>\n        <h2>Statistics</h2>\n        {propsArray.map(([key, value]) =>\n            <p key={key}>\n                <span>{key}:</span>\n                <span>{value}</span>\n            </p>)}\n        </>\n}","import React from 'react';\n\nexport default function Notification({message}) {\n    return <p>{message}</p>\n}","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from './components/Notification';\n\nclass App extends Component {\n    static defaultProps = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      good: this.props.good,\n      neutral: this.props.neutral,\n      bad: this.props.bad\n    }\n\n    addFeedback = (val) => {\n        this.setState((prevState) => {\n            return {\n                [val]: prevState[val] + 1\n            }\n        });\n    }\n\n    countTotalFeedback() {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n        // return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n    }\n\n    countPositiveFeedbackPercentage() {\n        const { good } = this.state;\n      return this.countTotalFeedback() === 0 ? 0 :\n        Math.round(good / this.countTotalFeedback() * 100);\n    }\n\n    render() {\n        const { good, neutral, bad } = this.state;\n      return (\n          <Section title=\"Please leave Feedback\">\n            <FeedbackOptions options={this.state} onLeaveFeedback={this.addFeedback}/>\n            {this.countTotalFeedback() === 0 ?\n            <Notification message=\"No feedback given\"/> :\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positive={`${this.countPositiveFeedbackPercentage()}%`}\n            />}\n          </Section>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}